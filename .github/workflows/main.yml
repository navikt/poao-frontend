name: Build and push to registry
on:
  push:
  workflow_dispatch: # Manual trigger

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    if: github.ref_name != 'main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          registry-url: 'https://npm.pkg.github.com'
      - name: Install dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: Run tests
        run: npm run test

  test-build-and-push:
    name: Build and push
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      security-events: write # push sarif to github security
      id-token: write
    if: github.ref_name == 'main' || github.event_name == 'workflow_dispatch'
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          registry-url: 'https://npm.pkg.github.com'
      - name: Install dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: Run tests
        run: npm test
      - name: Create image tag
        run: echo "IMAGE_TAG=$(TZ=\"Europe/Oslo\" date +%Y.%m.%d_%H.%M)-$(git rev-parse --short=12 HEAD)" >> $GITHUB_ENV
      - name: Push docker image to GAR and sign image
        if: github.event_name == 'push' && github.ref_name == 'main' || github.event_name == 'workflow_dispatch'
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: poao
          tag: ${{ env.IMAGE_TAG }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          build_secrets: NODE_AUTH_TOKEN=${{ secrets.READER_TOKEN }}
      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          name: Release poao-frontend
          tag_name: ${{ env.IMAGE_TAG }}
          target_commitish: main
          prerelease: false

  trivy-scan:
    name: Vulnerability scan with Trivy
    runs-on: ubuntu-latest
    needs: test-build-and-push
    permissions:
      contents: write # to write sarif
      security-events: write # push sarif to github security
      id-token: write # for nais/login
      actions: read # for private repositories
    steps:
      - uses: actions/checkout@v4
      - uses: nais/login@v0
        with:
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          team: poao
      - name: Pull docker image
        run: docker pull ${{ needs.test-build-and-push.outputs.image }}
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ needs.test-build-and-push.outputs.image }}"
          format: "sarif"
          output: "trivy.sarif"
          severity: "HIGH,CRITICAL"
          limit-severities-for-sarif: true
      - name: Upload results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy.sarif"
