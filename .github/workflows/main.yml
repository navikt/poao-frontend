name: Build and push to registry
on:
  push:
  workflow_dispatch: # Manual trigger

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    if: github.ref_name != 'main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm run test

  test-build-and-push:
    name: Build and push
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      security-events: write # push sarif to github security
      id-token: "write"
    if: github.ref_name == 'main' || github.event_name == 'workflow_dispatch'
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test
      - name: Create image tag
        run: echo "IMAGE_TAG=$(TZ=\"Europe/Oslo\" date +%Y.%m.%d_%H.%M)-$(git rev-parse --short=12 HEAD)" >> $GITHUB_ENV
      - name: Push docker image to GAR and sign image
        if: github.event_name == 'push' && github.ref_name == 'main' || github.event_name == 'workflow_dispatch'
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: poao
          tag: ${{ env.IMAGE_TAG }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          name: Release poao-frontend
          tag_name: ${{ env.IMAGE_TAG }}
          target_commitish: main
          prerelease: false
      - name: Upload results to GitHub Security
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "trivy.sarif"
