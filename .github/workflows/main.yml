name: Build and push to registry
on:
  push:
  workflow_dispatch: # Manual trigger
env:
  IMAGE: ghcr.io/${{ github.repository }}/poao-frontend

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    if: github.ref_name != 'main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm run test

  test-build-and-push:
    name: Build and push
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      security-events: write # push sarif to github security
    if: github.ref_name == 'main' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test
      - name: Create image tag
        run: echo "IMAGE_TAG=$(TZ=\"Europe/Oslo\" date +%Y.%m.%d_%H.%M)-$(git rev-parse --short=12 HEAD)" >> $GITHUB_ENV
      - name: Build and push Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo ${GITHUB_TOKEN} | docker login ghcr.io -u ${GITHUB_REPOSITORY} --password-stdin
          docker build -t ${IMAGE}:${IMAGE_TAG} .
          docker push ${IMAGE}:${IMAGE_TAG}
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          name: Release poao-frontend
          tag_name: ${{ env.IMAGE_TAG }}
          target_commitish: main
          prerelease: false
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.IMAGE }}:${{ env.IMAGE_TAG }}'
          format: 'sarif'
          output: 'trivy.sarif'
          severity: 'HIGH,CRITICAL'
          limit-severities-for-sarif: true
      - name: Upload results to GitHub Security
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy.sarif'
